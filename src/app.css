@import "open-props/postcss/style";
@import "open-props/postcss/normalize";
@import "open-props/postcss/buttons";

main {
    --size-base: var(--size-fluid-2);
    --size-minified-aside: var(--size-fluid-7);
    --padding-minified-aside: calc(var(--size-base) * 1.5);
    --block-size-player-row: var(--size-11);
    inline-size: 100%;
    block-size: 100vh;
    display: grid;
    grid: [main aside score-board] 1fr
    / [main-start] 11fr [aside] max-content [main-end score-board] var(--size-minified-aside);

    & > * {
        min-inline-size: 0;
    }

    /* @media (--md-n-above) {
        & > :is(section, aside) {
            grid-area: stack;
        }
    } */
}

h1 {
    font-size: var(--font-size-fluid-1);
}

section {
    grid-row: main;
    grid-column: main-start / main-end;
}

.logo {
    width: 100%;
    display: block;
    max-width: 100%;
    color: var(--text-2);
    padding: var(--size-base);
}

canvas {
    block-size: 100%;
    aspect-ratio: 1/1;
    background-color: var(--surface-1);
    /* border: 1px solid var(--surface-4); */
    box-shadow: var(--inner-shadow-4);
}

aside {
    grid-area: aside;
    display: grid;
    grid-template-rows: auto 1fr auto;
    min-inline-size: 0;
    min-block-size: 0;
    background-color: var(--surface-1);
    border-inline-start: var(--border-size-1) solid var(--surface-4);

    transition: transform 0.3s ease;
    will-change: transform;
    transform: translateX(100%);

    &[data-is-open="true"], &:focus-within {
        transform: translateX(0%);
    }

    & > * {
        min-block-size: 0;
    }
}

form {
    overflow-y: auto;
}

h1 {
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    text-align: left;
}

fieldset {
    display: grid;
    grid-template-columns: auto 1fr auto auto;
    align-items: center;
    gap: calc(var(--size-base) / 2);
    border-radius: 0;
    border: 0;

    & [name*="color"] {
        margin-block-start: var(--size-5);
        block-size: var(--size-7);
    }

    & [name*="controls"] {
        inline-size: var(--size-9);
    }
}

.input-wrapper {
    display: grid;
}

.action-bar {
    display: flex;
    border-block-start: var(--border-size-1) solid var(--surface-4);
}

.add, .start {
    inline-size: 100%;
    border-radius: 0;
    border: 0;
    padding: var(--size-base);
}

.start {
    border-inline-start: var(--border-size-1) solid var(--surface-4);
}

.score-board {
    grid-area: score-board;
    display: grid;
    grid-template-rows: auto 1fr auto;
    position: relative;
    z-index: 1;
    cursor: pointer;
    background-color: var(--surface-1);
    border-inline-start: var(--border-size-1) solid var(--surface-4);

    & > * {
        min-inline-size: 0;
        min-block-size: 0;
    }
}

header, .total-score {
    padding: var(--size-base);
    font-weight: var(--font-weight-6);
    font-size: var(--font-size-fluid-1);
    line-height: var(--font-lineheight-1);
    text-align: center;
}

.score {
    display: grid;
    place-items: center;
    inline-size: 100%;

    & > span {
        margin-block-start: var(--size-1);
        min-inline-size: 100%;
        display: inline-block;
        /* border-radius: var(--radius-round); */
        min-block-size: var(--size-5);
        font-size: var(--font-size-1);
        text-align: center;

        &:empty {
            border-bottom: var(--border-size-2) dotted var(--surface-2);
        }
    }
}

fieldset, .score {
    block-size: var(--block-size-player-row);
    padding: var(--size-base);
    border-block-start: var(--border-size-1) solid var(--surface-4);

    &:last-child {
        border-block-end: var(--border-size-1) solid var(--surface-4);
    }
}
