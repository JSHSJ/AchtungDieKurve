@import 'open-props/postcss/style';
@import 'open-props/postcss/normalize';
@import 'open-props/postcss/buttons';
@import 'open-props/switch/light';
@import 'open-props/switch/dark';

:root {
    --text-3: var(--gray-7);

    @media (prefers-color-scheme: dark) {
        --text-3: var(--gray-6);
    }
}

body {
    --space-away: var(--size-3);
    --space-near: calc(var(--size-2));

    @media (--lg-n-above) {
        --space-away: var(--size-fluid-3);
        --space-near: calc(var(--size-fluid-2) / 2);
    }
}

@custom-selector :--density-shift-1 .score, .input-wrapper;

:--density-shift-1 {
    --space-away: var(--size-fluid-2);
    --space-near: calc(var(--size-fluid-2) / 3);
}

svg {
    fill: currentColor;
    inline-size: var(--size-6);
}

@custom-selector :--card ouput;

:--card {
    border: var(--border-size-1) solid var(--surface-4);
    border-radius: var(--radius-2);
    padding: var(--space-near);
}

@custom-selector :--scroll-snap-y .tabs;

:--scroll-snap-y {
    --gap: var(--space-near);
    display: grid;
    grid-auto-flow: row;
    grid-auto-columns: 100%;
    /* gap: var(--gap); */

    overflow-y: auto;
    /* overscroll-behavior-block: contain; */
    scroll-snap-type: block proximity;
    /* scroll-padding-block: var(--gap); */

    @media (prefers-reduced-motion: no-preference) {
        scroll-behavior: smooth;
    }
}

@custom-selector :--scroll-snap-x ul.score-board;

:--scroll-snap-x {
    --gap: var(--space-near);
    display: flex;
    gap: var(--gap);

    overflow-x: auto;
    overscroll-behavior-inline: contain;
    scroll-snap-type: inline mandatory;
    scroll-padding-inline: var(--gap);

    @media (prefers-reduced-motion: no-preference) {
        scroll-behavior: smooth;
    }
}

.stack {
    display: grid;
    gap: var(--space-near);
}

.input-wrapper {
    display: grid;
    padding-block: var(--space-away);
    gap: var(--space-near);
    border-top: var(--border-size-1) solid var(--surface-2);

    &:has([type='checkbox']) {
        grid-template: 'label checkbox' / 1fr auto;
    }
}

.input-description {
    font-size: var(--font-size-0);
    color: var(--text-3);
    display: block;
}

main {
    block-size: 100vh;
    block-size: 100svh;
    overflow: hidden;

}

.game-screen {
   display: grid;
    grid:
          "canvas" 1fr
          "output" auto
          / 1fr;
    gap: var(--space-away);
    justify-items: center;

    & > * {
        min-block-size: 0;
    }

    @media (--lg-n-above) {
        grid: "canvas output" 1fr
              / 2fr auto;
        justify-items: start;
    }
}


.screen {
    width: 100%;
    height: 100%;
    display: grid;
    place-content: center;
}


.board {
    grid-area: canvas;
    inline-size: 100%;
    margin-inline: auto;


    @media (--lg-n-above) {
        padding-inline: 0;
    }
}

canvas {
    max-inline-size: 100%;
    max-block-size: 100%;
    block-size: 100%;
    margin-inline: auto;
    padding: 0;
    background-color: var(--surface-2);
    border-radius: var(--radius-2);

    @media (--lg-n-above) {
        border-radius: 0;
        margin-inline: 0;
    }
}

.menu {
    display: flex;
    flex-direction: column;
    position: relative;
    gap: var(--space-near);
    padding-inline: var(--space-away);
    padding-block: var(--space-away);

    max-inline-size: min(var(--size-lg), 100%);
    min-block-size: 0;
    overflow-y: auto;
    background-color: var(--surface-1);
    border-radius: var(--radius-conditional-3);
    box-shadow: var(--shadow-5);
    border: var(--border-size-1) solid var(--surface-2);
    margin: clamp(0px, calc(100vw - 100%) * 1e5, var(--space-away));


    & h2 {
        font-weight: var(--font-weight-6);
        font-size: var(--font-size-4);
    }
}

.menu-header {
    padding-block-end: var(--space-near);
}

.menu-footer {
    padding-block-start: var(--space-away);
    margin-block-start: var(--space-away);
    border-top: var(--border-size-1) solid var(--surface-2);
}

.back {
    max-width: fit-content;
    position: fixed;
    top: var(--space-away);
    left: var(--space-away);
}


output {
    grid-area: output;
    inline-size: 100%;
    padding-inline: var(--space-away);
    padding-block: var(--space-away);
    /* padding-block-end: env(safe-area-inset-bottom, 16px); */

    @media (--lg-n-above) {
        padding-inline: var(--space-near);
    }

    & ul.score-board {
        background-color: var(--surface-1);
        padding: 0;
        list-style: none;

        @media (--lg-n-above) {
            flex-direction: column;
        }
    }

    & li {
        padding: 0;
        scroll-snap-align: start;
        flex-shrink: 0;
        display: grid;
        align-items: start;
        gap: var(--space-near);

        & > span {
            overflow: hidden;
            max-inline-size: 12ch;
            font-weight: var(--font-weight-6);
            font-size: var(--font-size-0);
            min-block-size: var(--size-5);
            text-align: center;
            text-overflow: ellipsis;
        }
    }
}


form.player-form {
    display: grid;
}

fieldset {
    --fieldset-gap: calc(var(--space-away) / 2);
    display: flex;
    flex-wrap: wrap;
    gap: var(--fieldset-gap);
    border: none;
    border-block-start: var(--border-size-1) solid var(--surface-2);
    padding: 0;

    & label[for*='color'] {
        color: transparent;
    }

    & > .input-wrapper {
        flex: 1 1 var(--size-8);
    }

    & .input-wrapper {
        border: none;
    }

    & > .input-wrapper.name {
        flex: 2 1 var(--size-12);
    }

    & > .controls {
        flex: 1 1 calc(var(--size-8) * 2);
        display: flex;
        gap: var(--fieldset-gap);
    }
}

input {
    inline-size: 100%;
}
